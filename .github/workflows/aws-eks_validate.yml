jobs:
  validate:
    defaults:
      run: {shell: bash, working-directory: aws/eks/eks-terraform-scripts}
    env: {TF_BACKEND_KEY: githubdeployment.dev.aks_setup.terraform.tfstate}
    name: Validate Terraform
    runs-on: ubuntu-latest
    steps:
    - {name: Checkout, uses: actions/checkout@v2}
    - name: Setup Terraform Environment
      uses: hashicorp/setup-terraform@v1
      with: {cli_config_credentials_token: '${{ secrets.TF_API_TOKEN }}', terraform_version: 0.14.5}
    - {continue-on-error: true, id: fmt, name: Terraform Format, run: terraform fmt
        -check}
    - {continue-on-error: true, id: init, name: Terraform Init, run: "terraform init\
        \ -lock=false \\\n-backend-config=\"resource_group_name=terraform\" \\\n-backend-config=\"\
        key=${{ env.TF_BACKEND_KEY }}\" \\\n-backend-config=\"access_key=${{ secrets.TF_BACKEND_ACCESS_KEY\
        \ }}\" \\\n-backend-config=\"storage_account_name=${{ secrets.TF_BACKEND_SA\
        \ }}\"\n"}
    - {continue-on-error: true, id: validate, if: github.event_name == 'pull_request',
      name: Terraform Validate, run: terraform validate -no-color}
    - if: github.event_name == 'pull_request' && (steps.fmt.outcome == 'failure' ||
        steps.init.outcome == 'failure' || steps.validate.outcome == 'failure')
      name: Create PR comment if any check failed
      uses: actions/github-script@0.9.0
      with: {github-token: '${{ secrets.GITHUB_TOKEN }}', script: "const output =\
          \ `### Result from failed workflow: ${{ github.workflow }}\n#### Terraform\
          \ Format and Style :pencil2: \\`${{ steps.fmt.outcome }}\\`\n\n#### Terraform\
          \ Initialization :gear:\\`${{ steps.init.outcome }}\\`\n\n#### Terraform\
          \ Validate :interrobang:\\`${{ steps.validate.outcome }}\\`\n\n*Pusher:\
          \ @${{ github.actor }}, Action: ${{ github.event_name }}*`;\n  \ngithub.issues.createComment({\n\
          \  issue_number: context.issue.number,\n  owner: context.repo.owner,\n \
          \ repo: context.repo.repo,\n  body: output\n})\n"}
    - {if: steps.fmt.outcome == 'failure' || steps.init.outcome == 'failure' || steps.validate.outcome
        == 'failure', name: 'Exit based on status of fmt, init, and validate', run: "echo\
        \ Init: ${{ steps.init.outcome }}\necho Format: ${{ steps.fmt.outcome }}\n\
        echo Validate: ${{ steps.validate.outcome }}\nexit 1\n"}
name: Validate EKS Setup Terraform
on:
  pull_request:
    paths: [.github/anchors.yml, .github/workflows/aws-eks_validate.yml, aws/eks/eks-terraform-scripts/*]
